{"version":3,"sources":["AppConfig.js","Home/Hero.js","SubNav.js","WebsiteLoad.js","Header.js","Footer/Footer.js","CustomSearch.js","Portfolio.js","Projects/Details.js","Projects/Project.js","RouterConfig.js","serviceWorker.js","index.js"],"names":["Configurations","API","url","heroSlider","this","projects","projectInfo","id","zones","Hero","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","chunk_elements","array","size","chunked_arr","i","length","last","push","getRandomInt","min","max","Number","Math","floor","random","updateSliderStatus","newStates","c","setState","sliderStatus","chunk_projects","state","_this2","fetch","then","response","json","data","projectsFinalExport","map","bg","index","react_default","a","createElement","key","className","data-attime","data-rtlt","style","backgroundImage","concat","window","initDogma","console","log","src","draggable","alt","react_router_dom","to","pathname","React","Component","SubNav","href","props","WebsiteLoad","loadingAlert","src_SubNav","Home_Hero","Header","width","Footer","Date","getFullYear","target","rel","CustomSearch","formatMoney","amount","decimalCount","arguments","undefined","decimal","thousands","abs","isNaN","negativeSign","parseInt","toFixed","toString","j","substr","replace","slice","e","minMillion","topMillion","rangeOptions","zoneOptions","_this$state","options","JSX","value","toConsumableArray","result","zone","data-filter","htmlFor","name","Portfolio","subNavProjects","projectsToExport","project","address","path","images","home","ProjectsForLeftNavBar","src_Header","src_CustomSearch","src_Footer_Footer","Details","details","features","split","f","Project","projectID","match","params","projectName","topProjectInfo","alert","Images","values","ImageGallery","img","TopInfo","Projects_Details","RouteConfigExample","react_router","exact","component","Boolean","location","hostname","ReactDOM","render","RouterConfig","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c72d3339.chunk.js","sourcesContent":["export const Configurations = {\n    API: {\n        url: \"http://api.habitareinmobiliaria.com.mx/\",\n        heroSlider: function(){\n            return this.url+('desarrollos.php?hero_slider') //Api must return JSON string of 4 arrays made of all projects\n        },\n        projects: function(){\n            return this.url+\"desarrollos.php\" //Api must return JSON string of all projects\n        },\n        projectInfo: function(id){\n            return this.url+\"desarrollos.php?id=\"+id\n        },\n        zones: function(){\n            return this.url+\"desarrollos.php?cdmx\"\n        }\n    }\n};","import React from 'react'\nimport {Link} from 'react-router-dom'\nimport {Configurations} from '../AppConfig'\n\nclass Hero extends React.Component{\n\n    constructor(){\n        super()\n        this.state = {\n            projects: [],\n            sliderStatus: [\n                    true,\n                    true,\n                    false,\n                    true\n            ]\n        }\n        \n    }\n\n    componentWillMount(){\n        fetch(Configurations.API.heroSlider())\n            .then(response => response.json())\n            .then(data => {\n                    let projectsFinalExport = data.map((bg, index)=>{\n                        return (\n                            <div key={index} className=\"hero-grid\">\n                                    <div\n                                        className=\"hero-slider owl-carousel\"\n                                        data-attime={3220}\n                                        data-rtlt={this.state.sliderStatus[index]}\n                                    >\n                                        <div className=\"item\">\n                                                <div className=\"bg\" style={{backgroundImage: `url(${bg[0]})`}} />\n                                        </div>\n                                        <div className=\"item\">\n                                                <div className=\"bg\" style={{backgroundImage: `url(${bg[1]})`}} />\n                                        </div>\n                                        <div className=\"item\">\n                                                <div className=\"bg\" style={{backgroundImage: `url(${bg[2]})`}} />\n                                        </div>\n                                    </div>\n                            </div>\n                        )\n                    })\n                    this.setState({projects: projectsFinalExport},function(){\n                        window.initDogma()\n                    })\n                    console.log(data)\n                    console.log(this.state.projects)\n            });\n    }\n\n    chunk_elements = (array, size) =>{\n        const chunked_arr = [];\n        for (let i = 0; i < array.length; i++) {\n          const last = chunked_arr[chunked_arr.length - 1];\n          if (!last || last.length === size) {\n            chunked_arr.push([array[i]]);\n          } else {\n            last.push(array[i]);\n          }\n        }\n        return chunked_arr;\n    }\n\n    componentDidMount(){\n        //window.initDogma()\n        this.updateSliderStatus()\n    }\n\n    getRandomInt = (min, max) => {\n        return Number(Math.floor(Math.random() * (max - min)) + min)\n    }\n\n    updateSliderStatus = () =>{\n        var newStates = [false,false,false,false]\n        for(var c=0;c<4;c++)\n            newStates[c] = ( 1 === this.getRandomInt(0,3) ? true : false )\n        this.setState({\n            sliderStatus: newStates\n        })\n    }\n\n    chunk_projects = (array, size) =>{\n        const chunked_arr = [];\n        for (let i = 0; i < array.length; i++) {\n          const last = chunked_arr[chunked_arr.length - 1];\n          if (!last || last.length === size) {\n            chunked_arr.push([array[i]]);\n          } else {\n            last.push(array[i]);\n          }\n        }\n        return chunked_arr;\n    }\n\n    render(){\n        return (\n            <div className=\"full-height-wrap\">\n                {this.state.projects}\n                <div className=\"overlay\" />\n                    {/* enter-wrap */}\n                    <div className=\"enter-wrap-holder cent-holder wht-bg\">\n                    <div className=\"enter-wrap\">\n                    <h3>\n                        <img src=\"http://habitareinmobiliaria.com.mx/assets/img/logo-habitare-ok.png\" draggable=\"false\" alt=\"Habitare logo\" />\n                        </h3>\n                    <Link to={{ pathname: '/portfolio', state: 'flushDeal' }} className=\"btn anim-button trans-btn transition \">\n                        <span>Todos los desarrollos</span>\n                        <i className=\"fa fa-long-arrow-right\" />\n                    </Link>\n                    </div>\n                </div>\n                    {/* enter-wrap end  */}\n            </div>\n        )\n    }\n}\nexport default Hero","import React, {Component} from 'react'\nimport {Link} from 'react-router-dom'\n\nclass SubNav extends Component{\n  //add subnav class to elements with an <ul> inside them to make a sub list.\n    render(){\n        return(\n            <div>\n  {/*  Navigation */}\n  <div className=\"nav-overlay\" />\n  <div className=\"nav-inner isDown\">\n    <nav>\n      <ul>\n        <li>\n          <Link to=\"/\">\n            Inicio\n          </Link>\n        </li>\n        <li className=\"subnav\">\n          <a href=\"/portfolio\">\n            Desarrollos\n          </a>\n          {/*  Subnav  */}\n          <ul>\n           {this.props.projects}\n          </ul>\n          {/*  Subnav  end*/}\n        </li>\n        <li>\n          <a href=\"/contact\" className=\"ajax\">\n            Contacto\n          </a>\n        </li>\n      </ul>\n    </nav>\n  </div>\n  {/*  Navigation end */}\n</div>\n\n        );\n    }\n}\nexport default SubNav;","import React,{Component} from 'react'\nimport Hero from './Home/Hero'\nimport SubNav from './SubNav'\n\nclass WebsiteLoad extends Component{\n  componentDidMount(){\n    window.loadingAlert(0)\n    window.initDogma()\n  }\n  \n    render(){\n        return(\n            <div id=\"wrapper\">\n  {/*=============== content-holder ===============*/}\n  <div className=\"content-holder elem scale-bg2   no-padding\">\n    {/* Page title */}\n    <div className=\"dynamic-title\">Bienvenido...</div>\n    {/* Page title  end*/}\n    {/* NAVIGATION --EXTRAA */}\n          <SubNav />\n    {/* END NAVIGATION --EXTRA */}\n\n    {/*  Content */}\n    <div className=\"content full-height no-padding home-content \">\n      {/*full-height wrap */}\n        <Hero />\n      {/* full-height-wrap end  */}\n    </div>\n    {/* Content   end */}\n  </div>\n  {/* Content holder  end */}\n</div>\n        );\n    }\n}\nexport default WebsiteLoad;","import React, {Component} from 'react'\nimport {Link} from 'react-router-dom'\n\nclass Header extends Component{\n    render(){\n        // window.loadingAlert(3000)\n        // window.initDogma()\n\n        return(\n            <header>\n                {/* <!-- Nav button--> */}\n                <div className=\"nav-button\">\n                    <span  className=\"nos\"></span>\n                    <span className=\"ncs\"></span>\n                    <span className=\"nbs\"></span>\n                </div>\n                {/* <!-- Nav button end --> */}\n                {/* <!-- Logo-->  */}\n                <div className=\"logo-holder\">\n                    <Link to=\"/\" ><img src=\"http://vibocreando.com/habitare/habitareh.png\" width=\"150px\" alt=\"\" /></Link>\n                </div>\n                {/* <!-- Logo  end-->  */}\n                {/* <!-- Header  title -->  */}\n                <div className=\"header-title\">\n                    <h2><Link to=\"/test2\" className=\"ajax\">MENU</Link></h2>\n                </div>\n                {/* <!-- Header  title  end--> */}\n                {/* <!-- share --> */}\n                {/* <div className=\"show-share isShare\">\n                    <span>Share</span>\n                    <i className=\"fa fa-chain-broken\"></i>            \n                </div> */}\n                {/* <!-- share  end-->\t\t\t\t */}\n            </header> \n        );\n    }\n}\nexport default Header","import React, {Component} from 'react'\n\nclass Footer extends Component{\n    render(){\n        return(\n            <footer>\n                <div className=\"policy-box\">\n                    <span>&#169; Habitare Inmobiliaria {new Date().getFullYear()}  /  Derechos reservados. </span>\n                </div>\n                <div className=\"footer-social\">\n                    <ul>\n                        <li><a href=\"https://www.facebook.com/HabitareInmobiliariaMX/\" target=\"_blank\" rel=\"noopener noreferrer\"><i className=\"fa fa-facebook\"></i><span>facebook</span></a></li>\n                        <li><a href=\"https://twitter.com/Habitare_In\" target=\"_blank\" rel=\"noopener noreferrer\"><i className=\"fa fa-twitter\"></i><span>twitter</span></a></li>\n                        <li><a href=\"https://www.instagram.com/habitare_in/\" target=\"_blank\" rel=\"noopener noreferrer\"><i className=\"fa fa-instagram\"></i><span>instagram</span></a></li>\n                    </ul>\n                </div>\n            </footer>\n        );\n    }\n}\nexport default Footer","import React, {Component} from 'react'\nimport {Configurations} from './AppConfig'\nimport './css/CustomSearch.css'\n\nclass CustomSearch extends Component{\n\n    constructor(){\n        super()\n        this.state = {\n            minMillion: 1,\n            topMillion: 10,\n            rangeOptions: [],\n            zoneOptions: []\n        }\n    }\n\n    formatMoney = (amount, decimalCount = 2, decimal = \".\", thousands = \",\") =>{\n        try {\n          decimalCount = Math.abs(decimalCount);\n          decimalCount = isNaN(decimalCount) ? 2 : decimalCount;\n      \n          const negativeSign = amount < 0 ? \"-\" : \"\";\n      \n          let i = parseInt(amount = Math.abs(Number(amount) || 0).toFixed(decimalCount)).toString();\n          let j = (i.length > 3) ? i.length % 3 : 0;\n      \n          return negativeSign + (j ? i.substr(0, j) + thousands : '') + i.substr(j).replace(/(\\d{3})(?=\\d)/g, \"$1\" + thousands) + (decimalCount ? decimal + Math.abs(amount - i).toFixed(decimalCount).slice(2) : \"\");\n        } catch (e) {\n          console.log(e)\n        }\n      }\n\n    componentWillMount(){\n        const {formatMoney} = this\n        const {minMillion, topMillion} = this.state\n        var options = [], JSX = ''\n        for(var c=minMillion;c<=topMillion;c++){\n            JSX = <option key={c} value={c}>${formatMoney(c*1000000,0)} - ${formatMoney((c+1)*1000000,0)}</option>\n            if(c===topMillion){\n                JSX = <option key={c} value={c}>Más de ${formatMoney(c*1000000,0)}</option>\n            }\n            options = [...options, JSX ]\n        }\n\n        fetch(Configurations.API.zones())\n        .then( response => response.json() )\n        .then( (result) => {\n            let zones = result.map( (zone, index)=>{\n                return <option key={index} value={index}>{zone}</option>\n            })\n            this.setState({zoneOptions: zones})\n            console.log(zones)\n        })\n\n\n        console.log(options)\n        this.setState({rangeOptions: options})\n    }\n\n    render(){\n        return(\n            <div>\n        <div className=\"filter-holder filter-nvis-column\">\n        <div className=\"gallery-filters at\">\n          \n          <div className=\"SelectStyle\">\n            <button\n            className=\"SearchFormButton\"\n            data-filter=\"*\"\n          >\n            VER TODO\n          </button>\n        </div>\n        <div className=\"SelectStyle\">\n            <label htmlFor=\"zone\">Zona metropolitana:</label>\n            <select name=\"zone\" data-filter={\".zone\"} className=\"SearchFormItem\">\n                <option>TODAS</option>\n                {this.state.zoneOptions}\n            </select>\n        </div>\n        <div className=\"SelectStyle\">\n            <label htmlFor=\"price\">Rango de precio:</label>\n            <select name=\"price\" data-filter={\".price\"} className=\"SearchFormItem\">\n                <option>TODOS</option>\n                {\n                    this.state.rangeOptions\n                }\n            </select>\n        </div>\n        </div>\n      </div>\n      <div className=\"filter-button vis-fc\">Buscar</div>\n      </div>\n        );\n    }\n}\nexport default CustomSearch","import React, {Component} from 'react'\nimport Header from './Header'\nimport SubNav from './SubNav'\nimport Footer from './Footer/Footer'\nimport CustomSearch from './CustomSearch'\nimport {Configurations} from './AppConfig'\n\nimport {Link} from 'react-router-dom'\n\nclass Portfolio extends Component{\n\n  constructor(){\n    super()\n    this.state = {\n      projects: [],\n      subNavProjects: []\n    }\n  }\n\n  componentDidMount(){\n    window.loadingAlert(1500)\n  }\n\n  componentWillMount(){\n    fetch(Configurations.API.projects())\n            .then(response => response.json())\n            .then(result => {\n              //Projects to display in DOM\n              let projectsToExport = result.map((data)=>{\n                return (\n                  <div key={data.id} className=\"gallery-item houses apartments\">\n                                  <div className=\"grid-item-holder\">\n                                    <div className=\"box-item\">\n                                    <div className=\"wh-info-box\">\n                                        <div className=\"wh-info-box-inner at\">\n                                        <Link to={'/portfolio/project/'+data.id}>\n                                          {data.project.project}\n                                        </Link>\n                                        <span className=\"folio-cat\">{data.project.address}</span>\n                                        </div>\n                                    </div>\n                                    <img src={data.path+data.images.home} alt={data.project.project} />\n                                    </div>\n                                </div>\n                            </div>\n                )\n              })\n              //Projects to display in left nav bar\n              let ProjectsForLeftNavBar = result.map((data)=>{\n                return(\n                  <li key={data.id}>\n                    <Link to={'/portfolio/project/'+data.id}>\n                     {data.project.project}\n                    </Link>\n                 </li>\n                )\n              })\n              this.setState({subNavProjects: ProjectsForLeftNavBar})\n              this.setState({projects: projectsToExport},function(){\n                window.initDogma()\n              })\n              //console.log(this.state.projects)\n            })\n  }\n\n    render(){\n        return(\n            <div>\n                <Header />\n                <SubNav projects={this.state.subNavProjects} />\n                <div id=\"wrapper\">\n                \n  {/*=============== content-holder ===============*/}\n  <div className=\"content-holder elem scale-bg2 transition3\">\n    {/*  Content  */}\n    <div className=\"content \">\n      <section className=\"no-padding no-border\">\n        <CustomSearch />\n        {/*  gallery-items */}\n        <div className=\"gallery-items   hid-port-info\" >\n            {this.state.projects}\n        </div>\n        {/* end gallery items */}\n      </section>\n    </div>\n    {/*  Content  end */}\n  </div>\n  {/* Content holder  end */}\n</div>\n<Footer />\n</div>\n\n        );\n    }\n}\nexport default Portfolio","import React, {Component} from 'react'\n\nclass Details extends Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            details: []\n        }\n    }\n\n    componentWillMount(){\n        const {features} = this.props\n        let exploded = features.split(',')\n        let JSX = exploded.map((f,index)=>{\n            return <li key={index}>{f}</li>\n        })\n        this.setState({\n            details: JSX\n        })\n    }\n\n    render(){\n        return(\n            <ul className=\"project-details\">\n                {\n                    this.state.details\n                }\n            </ul>\n        )\n    }\n}\nexport default Details","import React,{Component} from 'react'\nimport Footer from '../Footer/Footer'\nimport Header from '../Header'\nimport SubNav from '../SubNav'\nimport Details from './Details'\nimport {Configurations} from '../AppConfig'\n\nclass Project extends Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            projectID : props.match.params.id,\n            projectName: \"\",\n            topProjectInfo: [],\n            images: []\n        };\n    }\n\n    componentWillMount(){\n      fetch(Configurations.API.projectInfo(this.state.projectID))\n        .then((result)=>{return result.json() })\n        .then((project)=>{\n          if(project === \"error\"){\n            alert(\"Error\")\n          }else{\n            console.log(project)\n            var Images = Object.values(project.images);\n            console.log(Images)\n            //Manipulate those images into JSX\n            let ImageGallery = Images.map((img)=>{\n              return (\n              <div key={Math.random()}className=\"horizontal_item\">\n                <div className=\"zoomimage\">\n                  <img src={project.path+img} className=\"intense\" alt=\"\" />\n                  <i className=\"fa fa-expand\" />\n                </div>\n                <img src={project.path+img} alt=\"\" />\n                <div className=\"show-info\">\n                  <span>Info</span>\n                  <div className=\"tooltip-info\">\n                    <h5>Imagen de muestra</h5>\n                    <p>\n                      Desarrollo {project.project.project}\n                    </p>\n                  </div>\n                </div>\n              </div>\n              )\n            })\n            let TopInfo = (\n              <div className=\"fixed-info-container\">\n                <h3>{project.project.project}</h3>\n                  <div className=\"separator\" />\n                  <div className=\"clearfix\" />\n                  <p>\n                    {project.project.address}\n                  </p>\n                  <h4>Características</h4>\n                  <Details features={project.project.features} />\n                  <a\n                    href=\"/\"\n                    className=\" btn anim-button   trans-btn   transition  fl-l\"\n                    target=\"_blank\"\n                  >\n                    <span>Ver en mapa</span>\n                    <i className=\"fa fa-eye\" />\n                  </a>\n                  </div>\n            )\n            this.setState({\n              projectName: project.project.project,\n              images: ImageGallery,\n              topProjectInfo: TopInfo\n            },function(){\n              window.loadingAlert(500)\n              window.initDogma()\n            })\n          }\n          \n        })\n    }\n\n    componentDidMount(){\n        // setTimeout(function(){\n        //   window.history.replaceState(undefined, undefined, \"#\"+3)\n        // },150)\n      }\n\n    render(){\n        return(\n            <div >\n                <Header />\n                <SubNav />\n                <div className=\"content full-height no-padding\">\n                {this.state.topProjectInfo}\n  {/*  fixed-info-container end*/}\n  {/*  resize-carousel-holder*/}\n  <div className=\"resize-carousel-holder vis-info gallery-horizontal-holder\">\n    {/*  gallery_horizontal*/}\n    <div\n      id=\"gallery_horizontal\"\n      className=\"gallery_horizontal owl_carousel\"\n    >\n      {this.state.images}\n    </div>\n    {/*  resize-carousel-holder*/}\n    {/*  navigation */}\n    <div className=\"customNavigation\">\n      <a href=\"/\" className=\"prev-slide transition\">\n        <i className=\"fa fa-angle-left\" />\n      </a>\n      <a href=\"/\" className=\"next-slide transition\">\n        <i className=\"fa fa-angle-right\" />\n      </a>\n    </div>\n    {/*  navigation end*/}\n  </div>\n  {/*  gallery_horizontal end*/}\n</div>\n<Footer />\n</div>\n\n        );\n    }\n}\nexport default Project","import React from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport WebsiteLoad from './WebsiteLoad'\nimport Portfolio from './Portfolio'\nimport Project from './Projects/Project'\n\nfunction RouteConfigExample() {\n  return(\n    <Router>\n            <Route exact path=\"/\" component={WebsiteLoad} />\n            <Route exact path=\"/portfolio\" component={Portfolio} />\n            <Route path=\"/portfolio/project/:id\" component={Project} />\n    </Router>\n  )\n}\n\nexport default RouteConfigExample;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport RouterConfig from './RouterConfig';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<RouterConfig />, document.getElementById('main'));\n\nserviceWorker.unregister();"],"sourceRoot":""}